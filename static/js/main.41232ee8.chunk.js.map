{"version":3,"sources":["Components/Display.js","Components/InputKeys.js","Components/Container.js","App.js","serviceWorker.js","index.js"],"names":["Display","className","id","this","props","display","Component","InputKeys","onClick","handleClick","value","Container","App","event","target","compute","setState","state","length","operators","newEquation","lastSliceIndex","forEach","element","index","includes","push","slice","join","Math","min","indexOf","parseFloat","splice","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41232ee8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Display extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Display' id='display'>\r\n                {this.props.display}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class InputKeys extends Component {\r\n    render() {\r\n        return (\r\n            <div className='InputKeys'>\r\n            <button id='clear' className='button' onClick={this.props.handleClick} value='AC'>AC</button>\r\n            <button id='add' className='button' onClick={this.props.handleClick} value='+'>+</button>\r\n            <button id='subtract' className='button' onClick={this.props.handleClick} value='-'>-</button>\r\n            <button id='multiply' className='button' onClick={this.props.handleClick} value='*'>*</button>\r\n            <button id='divide' className='button' onClick={this.props.handleClick} value='/'>/</button>\r\n            <button id='equals' className='button' onClick={this.props.handleClick} value='='>=</button>\r\n            <button id='one' className='button' onClick={this.props.handleClick} value='1'>1</button>\r\n            <button id='two' className='button' onClick={this.props.handleClick} value='2'>2</button>\r\n            <button id='three' className='button' onClick={this.props.handleClick} value='3'>3</button>\r\n            <button id='four' className='button' onClick={this.props.handleClick} value='4'>4</button>\r\n            <button id='five' className='button' onClick={this.props.handleClick} value='5'>5</button>\r\n            <button id='six' className='button' onClick={this.props.handleClick} value='6'>6</button>\r\n            <button id='seven' className='button' onClick={this.props.handleClick} value='7'>7</button>\r\n            <button id='eight' className='button' onClick={this.props.handleClick} value='8'>8</button>\r\n            <button id='nine' className='button' onClick={this.props.handleClick} value='9'>9</button>\r\n            <button id='zero' className='button' onClick={this.props.handleClick} value='0'>0</button>\r\n            <button id='decimal' className='button' onClick={this.props.handleClick} value='.'>.</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport Display from './Display';\r\nimport InputKeys from './InputKeys';\r\n\r\nexport default class Container extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Container'>\r\n                <Display id='Display' display={this.props.display} />\r\n                <InputKeys id='InputKeys' handleClick={this.props.handleClick}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './Components/Container';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       display: [0]\n    }\n  }\n\n  handleClick = (event) => {\n    switch (event.target.value){\n      case '=':\n        this.compute();\n        break;\n      case 'AC':\n        this.setState({\n          display: [0]\n        });\n        break;\n      case '0':\n        if (this.state.display.length === 1 && this.state.display[0] === 0){\n          this.setState({\n            display: [0]\n          })\n        }else{\n          this.setState({\n            display: [...this.state.display, event.target.value]\n          })\n        }\n        break;\n      case '.':\n        this.setState({\n          display: [...this.state.display, event.target.value]\n        });        \n        break;\n      default:\n        if (this.state.display.length === 1 && this.state.display[0] === 0){\n          this.setState({\n            display: [event.target.value]\n          })\n        }else{\n          this.setState({\n            display: [...this.state.display, event.target.value]\n          });\n        }\n        break;\n    }\n  }\n\n  compute = () => {\n    let operators = ['+','-','*','/'];\n    let newEquation = [];\n    let lastSliceIndex= 0;\n      this.state.display.forEach((element, index) => { //creates a new array that separates numbers with operators\n        if (operators.includes(element)){\n          newEquation.push(this.state.display.slice(lastSliceIndex, index).join(''));\n          newEquation.push(element);\n          lastSliceIndex = index + 1;\n        }\n      });\n      newEquation.push(this.state.display.slice(lastSliceIndex).join(''));\n      \n\n      while (newEquation.includes('*') || newEquation.includes('/')){ //applies the order of operation: multiplication and division\n        if (newEquation.includes('*') && newEquation.includes('/')){\n          let index = Math.min(newEquation.indexOf('*'), newEquation.indexOf('/'));\n          switch (newEquation[index]){\n            case '*':\n              newEquation[index - 1] = parseFloat(newEquation[index - 1]) * parseFloat(newEquation[index + 1]);\n              break;\n            case '/':\n              newEquation[index - 1] = parseFloat(newEquation[index - 1]) / parseFloat(newEquation[index + 1]);\n              break;\n          }\n          newEquation.splice(index, 2);\n        }else if (newEquation.includes('*')){\n          let index = newEquation.indexOf('*');\n          newEquation[index - 1] = parseFloat(newEquation[index - 1]) * parseFloat(newEquation[index + 1]);\n          newEquation.splice(index, 2);\n        }else {\n          let index = newEquation.indexOf('/');\n          newEquation[index - 1] = parseFloat(newEquation[index - 1]) / parseFloat(newEquation[index + 1]);\n          newEquation.splice(index, 2);\n        }\n      }\n\n      while (newEquation.includes('+') || newEquation.includes('-')){ //applies the order of operation: addition and subtraction\n        if (newEquation.includes('+') && newEquation.includes('-')){\n          let index = Math.min(newEquation.indexOf('+'), newEquation.indexOf('-'));\n          switch (newEquation[index]){\n            case '+':\n              newEquation[index - 1] = parseFloat(newEquation[index - 1]) + parseFloat(newEquation[index + 1]);\n              break;\n            case '-':\n              newEquation[index - 1] = parseFloat(newEquation[index - 1]) - parseFloat(newEquation[index + 1]);\n              break;\n          }\n          newEquation.splice(index, 2);\n        }else if (newEquation.includes('+')){\n          let index = newEquation.indexOf('+');\n          newEquation[index - 1] = parseFloat(newEquation[index - 1]) + parseFloat(newEquation[index + 1]);\n          newEquation.splice(index, 2);\n        }else {\n          let index = newEquation.indexOf('-');\n          newEquation[index - 1] = parseFloat(newEquation[index - 1]) - parseFloat(newEquation[index + 1]);\n          newEquation.splice(index, 2);\n        }\n    }\n    this.setState({\n      display: newEquation\n    })\n    console.log(newEquation);\n  }\n  render() {\n    return (\n      <div>\n        <Container id='Container' handleClick={this.handleClick} display={this.state.display}/>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}